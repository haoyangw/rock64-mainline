image: ayufan/rock64-dockerfiles:x86_64

variables:
  GITHUB_USER: ayufan-rock64
  GITHUB_REPO: linux-mainline-kernel

  USE_CCACHE: "true"
  CCACHE_DIR: "/data/shared/ccache"

stages: [build]

before_script:
  - ccache -M 0 -F 0

build:
  stage: build
  only: [branches]
  script:
    - rm -f ../*.deb
    - |
      set -x

      all_pipeline_ids() {
        for i in $(seq 1 "${2:-10}"); do
          result=$(curl --fail "https://gitlab.com/$1/pipelines.json?page=$i" |
            jq -r '.pipelines[].id')

          [[ -z "$result" ]] && return 0
          echo "$result"
        done

        echo "all_pipeline_ids: failed to get all ids" 1>&2
        return 1
      }

      get_pipeline_iid() {
        all_pipeline_ids "$1" "$3" | jq -r "select(. <= $2)" | wc -l
      }

      export RELEASE=$((1000+$(get_pipeline_iid "$CI_PROJECT_PATH" "$CI_PIPELINE_ID")))

      echo "Current release is $RELEASE."
    - ./dev-make kernel-package
    - |
      set -x

      export RELEASE_NAME="$(./dev-make version)"
      export RELEASE_TITLE="$(./dev-make version)"
      export DESCRIPTION="$CI_PROJECT_URL/pipelines/$CI_PIPELINE_ID"

      github-release release \
        --tag "${RELEASE_NAME}" \
        --name "${RELEASE_TITLE}" \
        --description "${DESCRIPTION}" \
        --target "${CI_COMMIT_SHA}" \
        --draft

      pushd ../
      for i in *.deb; do
        github-release upload \
          --tag "${RELEASE_NAME}" \
          --name "${i}" \
          --file "${i}"
      done
      popd

      github-release edit \
        --tag "${RELEASE_NAME}" \
        --name "${RELEASE_TITLE}" \
        --description "${DESCRIPTION}" \
        --pre-release
